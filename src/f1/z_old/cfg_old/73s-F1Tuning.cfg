#!/usr/bin/env python
# -*- coding: utf-8 -*-


# 73s版本，快速安全过弯道TEB

from dynamic_reconfigure.parameter_generator_catkin import *

# Create a parameter generator instance
gen = ParameterGenerator()

# This is a package name placeholder that catkin_make will replace automatically
# Let's assume your package name is 'f1'
PACKAGE = "f1" 

# ===================================================================
# Define parameters and default values for each zone individually
# ===================================================================

# --- Zone 1: E curve ---
# Enabled by default
group_1 = gen.add_group("Zone_1", state=True)

group_1.add("zone_1_enable",   bool_t,    0, "E curve", True)
group_1.add("zone_1_name",      str_t,     0, "Name of Zone 1", "E curve")
# Trigger zone parameters
group_1.add("zone_1_center_x",  double_t,  0, "Zone 1 Center X", 0.0, -10.0, 10.0)
group_1.add("zone_1_center_y",  double_t,  0, "Zone 1 Center Y", 3.0, -10.0, 10.0)
group_1.add("zone_1_radius",    double_t,  0, "Zone 1 Radius",   1.0, 0.1, 10.0)
# Navigation goal parameters
group_1.add("zone_1_goal_x",      double_t,  0, "Zone 1 Goal X", -2.8, -10.0, 10.0)
group_1.add("zone_1_goal_y",      double_t,  0, "Zone 1 Goal Y", 2.8, -10.0, 10.0)
group_1.add("zone_1_goal_yaw_deg",double_t,  0, "Zone 1 Goal Yaw (degrees)", -110.0, -180.0, 180.0)


# --- Zone 2: New Zone ---
group_2 = gen.add_group("Zone_2", state=True)

group_2.add("zone_2_enable",   bool_t,    0, "Zone 2", True)
group_2.add("zone_2_name",      str_t,     0, "Name of Zone 2", "Zone 2")
# Trigger zone parameters
group_2.add("zone_2_center_x",  double_t,  0, "Zone 2 Center X", -13.4, -100.0, 100.0)
group_2.add("zone_2_center_y",  double_t,  0, "Zone 2 Center Y", 4.7, -100.0, 100.0)
group_2.add("zone_2_radius",    double_t,  0, "Zone 2 Radius",   1.0, 0.1, 10.0)
# Navigation goal parameters
group_2.add("zone_2_goal_x",      double_t,  0, "Zone 2 Goal X", -18.1, -40.0, 20.0)
group_2.add("zone_2_goal_y",      double_t,  0, "Zone 2 Goal Y", 6.2, -10, 26.0)
group_2.add("zone_2_goal_yaw_deg",double_t,  0, "Zone 2 Goal Yaw (degrees)", -130.0, -180.0, 180.0)


# --- Zone 3: New Zone ---
group_3 = gen.add_group("Zone_3", state=True)

group_3.add("zone_3_enable",   bool_t,    0, "Zone 3", True)
group_3.add("zone_3_name",      str_t,     0, "Name of Zone 3", "Zone 3")
# Trigger zone parameters
group_3.add("zone_3_center_x",  double_t,  0, "Zone 3 Center X", -21.6, -40.0, 0.0)
group_3.add("zone_3_center_y",  double_t,  0, "Zone 3 Center Y", -0.3, -20.0, 20.0)
group_3.add("zone_3_radius",    double_t,  0, "Zone 3 Radius",   1.0, 0.1, 10.0)
# Navigation goal parameters
group_3.add("zone_3_goal_x",      double_t,  0, "Zone 3 Goal X", -25.0, -50.0, 0.0)
group_3.add("zone_3_goal_y",      double_t,  0, "Zone 3 Goal Y", -2.8, -20.0, 10.0)
group_3.add("zone_3_goal_yaw_deg",double_t,  0, "Zone 3 Goal Yaw (degrees)", 120.0, -180.0, 180.0)


# --- Zone 4: New Zone ---
group_4 = gen.add_group("Zone_4", state=True)

group_4.add("zone_4_enable",   bool_t,    0, "New Zone 4", False)
group_4.add("zone_4_name",      str_t,     0, "Name of Zone 4", "Zone 4")
# Trigger zone parameters
group_4.add("zone_4_center_x",  double_t,  0, "Zone 4 Center X", 0.0, -100.0, 100.0)
group_4.add("zone_4_center_y",  double_t,  0, "Zone 4 Center Y", 0.0, -100.0, 100.0)
group_4.add("zone_4_radius",    double_t,  0, "Zone 4 Radius",   1.0, 0.1, 10.0)
# Navigation goal parameters
group_4.add("zone_4_goal_x",      double_t,  0, "Zone 4 Goal X", 0.0, -100.0, 100.0)
group_4.add("zone_4_goal_y",      double_t,  0, "Zone 4 Goal Y", 0.0, -100.0, 100.0)
group_4.add("zone_4_goal_yaw_deg",double_t,  0, "Zone 4 Goal Yaw (degrees)", 0.0, -180.0, 180.0)


# --- Zone 5: Cross ---
# Enabled by default
group_5 = gen.add_group("Zone_5", state=True)

group_5.add("zone_5_enable",   bool_t,    0, "Cross",  True)
group_5.add("zone_5_name",      str_t,     0, "Name of Zone 5", "cross")
# Trigger zone parameters
group_5.add("zone_5_center_x",  double_t,  0, "Zone 5 Center X", -24.0, -50.0, 0.0)
group_5.add("zone_5_center_y",  double_t,  0, "Zone 5 Center Y", 6.0, -20.0, 30.0)
group_5.add("zone_5_radius",    double_t,  0, "Zone 5 Radius",   1.0, 0.1, 10.0)
# Navigation goal parameters
group_5.add("zone_5_goal_x",      double_t,  0, "Zone 5 Goal X", -17.3, -30.0, 10.0)
group_5.add("zone_5_goal_y",      double_t,  0, "Zone 5 Goal Y", 2.35, -20.0, 20.0)
group_5.add("zone_5_goal_yaw_deg",double_t,  0, "Zone 5 Goal Yaw (degrees)", -45.0, -180.0, 180.0)


# --- Zone 6: Z curve ---
# Enabled by default
group_6 = gen.add_group("Zone_6", state=True)

group_6.add("zone_6_enable",   bool_t,    0, "Z curve", True)
group_6.add("zone_6_name",      str_t,     0, "Name of Zone 6", "Z curve")
# Trigger zone parameters
group_6.add("zone_6_center_x",  double_t,  0, "Zone 6 Center X", -10.0, -30.0, 10.0)
group_6.add("zone_6_center_y",  double_t,  0, "Zone 6 Center Y", -1.0, -30.0, 20.0)
group_6.add("zone_6_radius",    double_t,  0, "Zone 6 Radius",   1.0, 0.1, 10.0)
# Navigation goal parameters
group_6.add("zone_6_goal_x",      double_t,  0, "Zone 6 Goal X", -6.1, -30.0, 20.0)
group_6.add("zone_6_goal_y",      double_t,  0, "Zone 6 Goal Y", -3.0, -26.0, 30.0)
group_6.add("zone_6_goal_yaw_deg",double_t,  0, "Zone 6 Goal Yaw (degrees)", -11.1, -180.0, 180.0)


# --- Zone 7: New Zone ---
group_7 = gen.add_group("Zone_7", state=True)

group_7.add("zone_7_enable",   bool_t,    0, "New Zone 7", False)
group_7.add("zone_7_name",      str_t,     0, "Name of Zone 7", "Zone 7")
# Trigger zone parameters
group_7.add("zone_7_center_x",  double_t,  0, "Zone 7 Center X", 0.0, -100.0, 100.0)
group_7.add("zone_7_center_y",  double_t,  0, "Zone 7 Center Y", 0.0, -100.0, 100.0)
group_7.add("zone_7_radius",    double_t,  0, "Zone 7 Radius",   1.0, 0.1, 10.0)
# Navigation goal parameters
group_7.add("zone_7_goal_x",      double_t,  0, "Zone 7 Goal X", 0.0, -100.0, 100.0)
group_7.add("zone_7_goal_y",      double_t,  0, "Zone 7 Goal Y", 0.0, -100.0, 100.0)
group_7.add("zone_7_goal_yaw_deg",double_t,  0, "Zone 7 Goal Yaw (degrees)", 0.0, -180.0, 180.0)


# Generate the final configuration file
exit(gen.generate(PACKAGE, "navigation_manager_node", "NavigationParams"))